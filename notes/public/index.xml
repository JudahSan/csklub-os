<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSKlub Operating System Notes</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on CSKlub Operating System Notes</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Sep 2025 03:36:13 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>http://localhost:1313/hardware_software_interface/introduction/</link>
      <pubDate>Tue, 02 Sep 2025 03:36:13 +0300</pubDate>
      <guid>http://localhost:1313/hardware_software_interface/introduction/</guid>
      <description>&lt;h1 id=&#34;the-hardware-software-interface-class&#34;&gt;The Hardware/ Software Interface Class&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cs.sfu.ca/~ashriram/Courses/CS295/assets/books/CSAPP_2016.pdf&#34;&gt;Course text book: Computer Systems&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-big-theme&#34;&gt;The Big Theme&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The hardware/ software interface&lt;/li&gt;&#xA;&lt;li&gt;How does the h/w(0s and 1s, processor executing instructions) relate to the s/w (Go programs)?&lt;/li&gt;&#xA;&lt;li&gt;Computing is about abstractions (but we can&amp;rsquo;t forget reality)&lt;/li&gt;&#xA;&lt;li&gt;What are the abstractions that we use?&lt;/li&gt;&#xA;&lt;li&gt;What do YOU need to know about them?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;When do they break down and you have to peek under the hood?&lt;/li&gt;&#xA;&lt;li&gt;What bugs can they cause and how do you find them?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Become a better programmer and begin to understand the important concepts that have evolved in building ever more complex computer systems.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;roadmap&#34;&gt;Roadmap&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Memory and data&lt;/li&gt;&#xA;&lt;li&gt;Integers and floats&lt;/li&gt;&#xA;&lt;li&gt;Machine code and C&lt;/li&gt;&#xA;&lt;li&gt;x86 assembly&lt;/li&gt;&#xA;&lt;li&gt;Procedures and stacks&lt;/li&gt;&#xA;&lt;li&gt;Arrays and structs&lt;/li&gt;&#xA;&lt;li&gt;Memory and caches&lt;/li&gt;&#xA;&lt;li&gt;Processes&lt;/li&gt;&#xA;&lt;li&gt;Virtual memory&lt;/li&gt;&#xA;&lt;li&gt;Memory allocation&lt;/li&gt;&#xA;&lt;li&gt;Java/Go vs C&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;little-theme-1-representation&#34;&gt;Little theme 1: Representation&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;All digital systems represnt everything as 0s and 1s&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The o and 1 are really two different voltage ranges in the electronics&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Everything includes:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Numbers - integers and floating point&lt;/li&gt;&#xA;&lt;li&gt;Character - the building blocks of strings&lt;/li&gt;&#xA;&lt;li&gt;Instructions - the directives to the CPU that make up a program&lt;/li&gt;&#xA;&lt;li&gt;Pointers - addresses of data objects stored away in memory&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;These encodings are stored throughout a computer system&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In registers, caches, memories, disks, etc&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;They all need addresses&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A way to find them&lt;/li&gt;&#xA;&lt;li&gt;Find a new place to put a new item&lt;/li&gt;&#xA;&lt;li&gt;Reclain the place in memory when data no longer needed&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;little-theme-2-translation&#34;&gt;Little theme 2: Translation&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;There is a big gap between how we thing about programs and data and the 0s and 1s of computers&lt;/li&gt;&#xA;&lt;li&gt;Need languages to describe what we mean&lt;/li&gt;&#xA;&lt;li&gt;Languages need to be translated one step at a time&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Word-by-word&lt;/li&gt;&#xA;&lt;li&gt;Phrase structure&lt;/li&gt;&#xA;&lt;li&gt;Grammar&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;We know Java/Go as a programming language&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Have to work our way down to the 0s and 1s of computers&lt;/li&gt;&#xA;&lt;li&gt;Try not to lose anything in translation!&lt;/li&gt;&#xA;&lt;li&gt;We&amp;rsquo;ll encounter Java/Go byte-code, C language, assembly language, and machine code (for the X86 family of CPU architectues)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;little-theme-3-control-flow&#34;&gt;Little theme 3: Control flow&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How do computers orchestrate the many things they are doing - seemingly in parallel&lt;/li&gt;&#xA;&lt;li&gt;What do we have to keep track of when we call a method, and then another, and then another, and so on&lt;/li&gt;&#xA;&lt;li&gt;How do we know what to do upon &amp;ldquo;return&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;How do we run multiple user programs and let them share a sigle computer and memory&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Architecture</title>
      <link>http://localhost:1313/hardware_software_interface/architecture/</link>
      <pubDate>Wed, 17 Sep 2025 03:36:13 +0300</pubDate>
      <guid>http://localhost:1313/hardware_software_interface/architecture/</guid>
      <description>&lt;h1 id=&#34;basics-of-architecture-machine-programming&#34;&gt;Basics of architecture, machine programming&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; What is an ISA (Instruction Set Architecture)?&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; History of Intel processors and architectures&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; C, assembly, machine code&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; x86 basics: registers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;translation-impacts-performance&#34;&gt;Translation Impacts Performance&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/prog_lifetime.png&#34; alt=&#34;program lifetime&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Program lifetime illustration&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The time required to execute a program depends on:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The program.&lt;/li&gt;&#xA;&lt;li&gt;The compiler: what set of assember instructions it translates the program into.&lt;/li&gt;&#xA;&lt;li&gt;The instruction set architecture (ISA): what set of instructions it makes available to the compiler.&lt;/li&gt;&#xA;&lt;li&gt;The hardware implementation: how much time it takes to execute an instruction.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;instruction-set-architectures&#34;&gt;Instruction Set Architectures&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The ISA defines:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The system&amp;rsquo;s state (e.g. registers, memory, program counter)&lt;/li&gt;&#xA;&lt;li&gt;The instructions the CPU can execute&lt;/li&gt;&#xA;&lt;li&gt;The effect that each of these instructions will have on the system state&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;general-isa-design-decisions&#34;&gt;General ISA Design Decisions&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Instructions&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What instructions are available? What do they do?&lt;/li&gt;&#xA;&lt;li&gt;How are they encoded? (eg 32bits, 64bits)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Registers&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How many registers are there?&lt;/li&gt;&#xA;&lt;li&gt;How wide are they?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Memory(addressing modes)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How do you specify a memory location?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;x86&#34;&gt;x86&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Processors that implement the x86 ISA completely dominate the server, desktop and laptop markets&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Evolutionary design&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Backwards compatibility up until 8086, introduced in 1978&lt;/li&gt;&#xA;&lt;li&gt;Added more features as time goes on&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Complex instruction set computer (CISC)&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Many different instructions with many different formats&#xA;&lt;ul&gt;&#xA;&lt;li&gt;But, only small subset encountered with Linux programs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;(as opposed to Reduced Instruction Set Computers (RISC), which use simpler instructions)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;intel-x86-evolution-milestones&#34;&gt;Intel x86 Evolution: Milestones&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Name&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Date&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Transistors&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: right&#34;&gt;MHz&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;8086&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1978&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;29k&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;5-10&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First 16-bit processor. Basis for IBM PC &amp;amp; DOS&lt;/li&gt;&#xA;&lt;li&gt;1MB address space&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Name&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Date&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Transistors&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: right&#34;&gt;MHz&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;386&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;1985&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;275k&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;16-33&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First 32 bit processor, referred to as IA32&lt;/li&gt;&#xA;&lt;li&gt;Added &amp;ldquo;flat addressing&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;Capable of running Unix&lt;/li&gt;&#xA;&lt;li&gt;32-bit Linux/gcc targets i386 by default&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Name&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Date&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;Transistors&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: right&#34;&gt;MHz&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Pentium 4F&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;2005&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;230M&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: right&#34;&gt;2800-3800&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First 64-bit Intel x86 processor, referred to as x86-64&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;intel-x86-processors&#34;&gt;Intel x86 Processors&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Machine Evolution&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;486&lt;/td&gt;&#xA;          &lt;td&gt;1989&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Pentium&lt;/td&gt;&#xA;          &lt;td&gt;1993&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Pentium/MMX&lt;/td&gt;&#xA;          &lt;td&gt;1997&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;PentiumPro&lt;/td&gt;&#xA;          &lt;td&gt;1995&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Pentium III&lt;/td&gt;&#xA;          &lt;td&gt;1999&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Pentium 4&lt;/td&gt;&#xA;          &lt;td&gt;2001&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Core 2 Duo&lt;/td&gt;&#xA;          &lt;td&gt;2006&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Core i7&lt;/td&gt;&#xA;          &lt;td&gt;2008&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/i7.png&#34; alt=&#34;Intel Core i7&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
